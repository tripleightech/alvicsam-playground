stages:
  - fmt
  - build
  - test
  - deploy

variables:
  CI_IMAGE:                        "paritytech/ci-linux:production"
  TEST_GLOBAL_VAR:                 "lalala"

default:
  image:                           $CI_IMAGE
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  tags:
    - testlab-docker

.test-refs:                        &test-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^some-release-v[0-9]+\.[0-9]+.*$/              # i.e. some-release-v1.0, some-release-v2.1rc1

cargo-fmt:
  stage:                           fmt
  <<:                              *test-refs
  script:
    - cargo fmt
    - git diff
    # xargs trimms whitespaces
    - if [[ `git diff | wc -l | xargs` == 0  ]]; then
        echo "ok";
      else
        echo "--- we need to push some changes ----";
        echo "--- setup ssh -----------------------";
        apt-get update && apt-get install -y ssh;
        eval $(ssh-agent);
        ssh-add - <<< ${GITHUB_SSH_PRIV_KEY};
        mkdir ~/.ssh && touch ~/.ssh/known_hosts;
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts;
        echo "----  git config --------------------";
        git config --global user.email "jd@example.com";
        git config --global user.name "John Doe";
        echo "----  git status --------------------";
        git status;
        echo "----  git add -----------------------";
        git add *;
        echo "----  git commit --------------------";
        git commit --amend -m "[ci] apply cargo fmt";
        echo "----  git status --------------------";
        git status;
      fi

build-job:
  stage:                           build
  <<:                              *test-refs
  script:
    - cargo build

